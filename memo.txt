🌞           🌈           🌞           🌈           🌞

#2.1
    1. 데이터 타입
        ⏩  Number
            ➕  Integer 정수
            ➕  float 실수
        ⏩  String
            ➕  "text"
        
🌈           🌞           🌈           🌞           🌈

#2.2
    1. 변수
        ⏩  const 
            ➕  상수
        ⏩  let
            ➕  변수
        ⏩  변수이름짓기 
            ➕  camelCaseVariableName

🌞           🌈           🌞           🌈           🌞

#2.3
    1. 자바스크립트는 위에서 아래로 읽어들인다.
    2. var는 중복된 변수명을 잡아주지 않아 나도 모르게 업데이트 될 가능성이 있으므로 사용하지않는다.

🌈           🌞           🌈           🌞           🌈

#2.4 
    1. 데이터 타입2
        ⏩  Boolean
            ➕  true
            ➕  false
        ⏩  Null
            ➕  null (사용자가 값이 없다고 지정)
        ⏩  Undefined
            ➕  undefined (정의되지 않음)

🌞           🌈           🌞           🌈           🌞

#2.5
    1. 배열
        ⏩  배열은 데이터들로 이루어진 리스트다.
        ⏩  배열 선언 방법
            ➕  const array = ["1",2,true,null,undefined,object]
        ⏩  배열 특징
            ➕  배열의 요소엔 모든 데이터타입이 들어갈수 있다.
        ⏩  배열 기능
            ➕  array[n] 
                    ➡ 배열의 n번쨰 요소를 가져온다.
            ➕  array.push(something)
                    ➡  배열의 마지막 요소에 something을 추가한다.

🌈           🌞           🌈           🌞           🌈

#2.6
    1. 오브젝트
        ⏩  오브젝트 선언 방법
            ➕  const object = { tomato:"red", banana:"yellow" }
        ⏩  오브젝트 특징
            ➕  오브젝트는 property와 key를 갖는다.
            ➕  오브젝트는 const로 선언되었어도 내부의 property의 key는 변경할 수 있다.
        ⏩  오브젝트 기능
            ➕  object.property
                    ➡ object의 property의 key값이 리턴된다.

🌞           🌈           🌞           🌈           🌞

#2.7~2.8
    1. 함수(function)
        ⏩  함수 선언 방법
            ➕  function funcName(parameter){coding}
        ⏩  함수 특징
            ➕  함수는 parameter를 받고, 받은 parameter를 함수 내부에서 사용할수 있다.
            ➕  선언함수는 호이스팅 O, 익명함수는 호이스팅X

🌈           🌞           🌈           🌞           🌈

#2.11
    1. Return
        ⏩  함수에서 결과값을 추출하고 싶을때 Return을 사용한다.
            ➕  const add(num1,num2){
                    return num1+num2
                }
        ⏩  함수에서 return 이후의 코드들은 실행되지 않는다.   

🌞           🌈           🌞           🌈           🌞

#2.13~2.16
    1. if문
        ⏩  if문 사용 방법
            ➕  if (조건문) {
                    실행문
                }
                else if (조건문) {
                    실행문
                }
                else {실행문} 
        ⏩  if문의 조건문이 true이면 실행문이 실행되고
            if문의 조건문이 false이면 실행문이 실행되지 않고 넘어간다.
    
    2. 연산자
        ⏩  >, <, =>, <=, &&, ||, ==(값만비교), ===(값과타입비교), !, !=, !==
    
🌈           🌞           🌈           🌞           🌈

#3.0
    1. Document
        ⏩  html의 정보가 들어있는 객체
            ➕ document.title 
                ➡   html의 title을 가져온다.
            ➕ document.body
                ➡   html의 body를 가져온다.
            ➕  console.dir(document)
                ➡   document내부의 property들을 확인할수 있다.

🌞           🌈           🌞           🌈           🌞

#3.1
    1. JS로 HTML에 접근하기 
        ⏩  document.getElementById("body")
            ➕  id="body"인 태그를 불러온다.
        ⏩  HTMLTAG.innerText = ""
            ➕  HTML tag의 내부 text를 변경한다.
        ⏩  HTMLTAG.className
            ➕  HTML tag의 className을 가져온다.

🌈           🌞           🌈           🌞           🌈

#3.2
    1. JS로 HTML에 접근하기
        ⏩  document.getElementByClassName("body")
            ➕  class="body"인 태그를 불러온다.
        ⏩  document.getElementsByTagName("h1")
            ➕  모든 h1태그를 배열형태로 불러온다.
        ⏩  document.querySelector("CSS Selector")            
            ➕  JS에서 CSS선택자를 이용하여 HTML 태그를 불러온다
                ➡ document.querySelector(".body #h1")            
            ➕  중복된 선택자들 중에 첫번째 태그를 불러온다.
        ⏩  document.querySelectorAll(".body #h1")
            ➕  중복된 선택자들 모두를 배열 형태로 불러온다.

🌞           🌈           🌞           🌈           🌞

#3.3~#3.4
    1.  JS로 CSS에 접근하기
        ⏩  HTMLTAG.style.color = "blue"
            ➕  console.dir(HTMLTAG)로 style의 내부를 확인할 수 있다.
    
    2.  이벤트 함수
        ⏩  특정 제스처가 발생했을때 실행되는 함수를 이벤트 함수라고 한다.
        ⏩  이벤트 함수 사용 방법
            ➕  HTMLTAG.addEventListener("click",function)
            ➕  HTMLTAG.addEventListener("mouseenter",function)
            ➕  HTMLTAG.addEventListener("mouseleave",function)
            ➕  function은 addEventListener함수 위에 미리 작성해놓자
            ➕  console.dir(HTMLTAG)를 하여 사용가능한 event들을 확인할 수 있다. (on붙은것들)

🌈           🌞           🌈           🌞           🌈

#3.5
    1.  이벤트 함수를 사용하는 두번째 방법
        ⏩   HTMLTAG.onclick = function
        ⏩   이방법 보단 addEventListener 방법을 선호
            ➕  removeEventListener를 통해서 event제거가 가능하기 때문 

    2.  Window 객체 
        ⏩   window 객체는 말그대로 브라우저 창을 나타냄
            ➕  window.addEventListener("resize",function)
            ➕  window.addEventListener("online",function)
            ➕  window.addEventListener("offline",function)

🌞           🌈           🌞           🌈           🌞

#3.8
    1.  JS로 HTML에 접근하기
        ⏩   HTMLTAG.classList.contains("body")
            ➕  해당요소에 body라는 class가 있는지 Boolean값 반환
        ⏩   HTMLTAG.classList.add("body")
            ➕  해당요소에 body라는 class를 추가
        ⏩   HTMLTAG.classList.remove("body")
            ➕  해당요소에 body라는 class를 제거
        ⏩   HTMLTAG.classList.toggle("body")
            ➕  해당요소에 body라는 class를 추가 / 제거
            ➕  toggle은 on/off버튼같은 역할을 한다

🌈           🌞           🌈           🌞           🌈

#4.0
    1.  index.html 파일 생성
        ⏩   <link rel="stylesheet" href="style.css" />
        ⏩   <script src="app.js" defer>
    
    2.  app.js 파일 생성
        ⏩   HTMLTAG.value
            ➕  해당요소의 값을 불러온다.
            ➕  주로 input에 쓰인다.
            ➕  document.querySelector("input").value 

🌞           🌈           🌞           🌈           🌞

#4.1
    1.  app.js 파일 수정
        ⏩   function handleLoginBtnClick(){} 수정
            ➕  String.length
                ➡  String이 몇글자인지 Number로 리턴한다.
    
    2.  index.html 파일 수정
        ⏩   <form id="login-form">
            ➕  <input requried>
            ➕  <input max-length="15">
            ➕  <input min-length="15">

🌈           🌞           🌈           🌞           🌈

#4.2
    1.  app.js 파일 수정
        ⏩   function handleLoginFormSubmit(e){}
            ➕  eventListener의 콜백함수는 e 파라미터가 있다.
            ➕  e.preventDefault()는 브라우저의 기본 수행동작을 막아준다.
                ➡  해당 코드에선 submit이 발생시 브라우저가 새로고침되는걸 막는다.
        ⏩   loginForm.addEventListener("submit", handleLoginFormSubmit);
        
🌞           🌈           🌞           🌈           🌞

#4.3
    1.  addEventListener의 콜백함수의 event 파라미터는 다양한 정보를 갖고있다.
        ⏩   마우스가 클릭한 곳의 X,Y좌표 등

🌈           🌞           🌈           🌞           🌈

#4.4
    1.  index.html 파일 수정
        ⏩   < id="hello" class="hidden">
    
    2.  style.css 파일 수정
        ⏩   .hidden {}
    3.  app.js 파일 수정
        ⏩   const hello = document.querySelector("#hello");
        ⏩   const HIDDEN_CLASSNAME = "hidden";
        ⏩   loginForm.classList.add(HIDDEN_CLASSNAME);
        ⏩   hello.classList.remove(HIDDEN_CLASSNAME);
        ⏩   hello.innerText = `Hello ${username}`;
            ➕  백틱기호 문자
                ➡  ``
            ➕  백틱기호 문자에서 변수 사용 방법 
                ➡  ${변수명} 

🌞           🌈           🌞           🌈           🌞

#4.5
    1.  app.js 파일 수정
        ⏩   localStorage.setItem("username", username);
            ➕  브라우저에는 localStorage라는 내장 저장소가 있다.
            ➕  localStorage.setItem(property,key)
                ➡  localStorage에 property와 key를 등록한다.

🌈           🌞           🌈           🌞           🌈

#4.6
    1.  index.html 파일 수정
        ⏩   <form id="login-form" class="hidden">
    
    2.  app.js 파일 수정
        ⏩   const USERNAME_KEY = "username";
        ⏩   function helloUser(username) {}
        ⏩   function handleLoginFormSubmit(e) {}
        ⏩   if (savedUsername === null) {}
        ⏩   const savedUsername = localStorage.getItem("username");
            ➕  localStorage.getItem(String)
                ➡  localStorage의 property중 String과 일치하는 property의 key를 리턴한다

🌞           🌈           🌞           🌈           🌞
🌈           🌞           🌈           🌞           🌈
🌞           🌈           🌞           🌈           🌞
🌈           🌞           🌈           🌞           🌈
🌞           🌈           🌞           🌈           🌞
🌈           🌞           🌈           🌞           🌈
🌞           🌈           🌞           🌈           🌞
🌈           🌞           🌈           🌞           🌈
🌞           🌈           🌞           🌈           🌞
🌈           🌞           🌈           🌞           🌈
🌞           🌈           🌞           🌈           🌞
🌈           🌞           🌈           🌞           🌈
🌞           🌈           🌞           🌈           🌞
🌈           🌞           🌈           🌞           🌈
🌞           🌈           🌞           🌈           🌞
🌈           🌞           🌈           🌞           🌈
🌞           🌈           🌞           🌈           🌞
🌈           🌞           🌈           🌞           🌈
🌞           🌈           🌞           🌈           🌞
🌈           🌞           🌈           🌞           🌈
🌞           🌈           🌞           🌈           🌞
🌈           🌞           🌈           🌞           🌈
🌞           🌈           🌞           🌈           🌞
🌈           🌞           🌈           🌞           🌈
🌞           🌈           🌞           🌈           🌞
🌈           🌞           🌈           🌞           🌈
🌞           🌈           🌞           🌈           🌞
🌈           🌞           🌈           🌞           🌈
🌞           🌈           🌞           🌈           🌞
🌈           🌞           🌈           🌞           🌈
🌞           🌈           🌞           🌈           🌞
🌈           🌞           🌈           🌞           🌈
🌞           🌈           🌞           🌈           🌞
🌈           🌞           🌈           🌞           🌈
🌞           🌈           🌞           🌈           🌞
🌈           🌞           🌈           🌞           🌈
🌞           🌈           🌞           🌈           🌞
🌈           🌞           🌈           🌞           🌈
🌞           🌈           🌞           🌈           🌞
🌈           🌞           🌈           🌞           🌈
🌞           🌈           🌞           🌈           🌞
🌈           🌞           🌈           🌞           🌈
🌞           🌈           🌞           🌈           🌞
🌈           🌞           🌈           🌞           🌈
🌞           🌈           🌞           🌈           🌞
🌈           🌞           🌈           🌞           🌈
🌞           🌈           🌞           🌈           🌞

➡ 자바스크립트의 여러기능
    ➕ consoloe.log() 👉🏻 () 내부를 콘솔에 출력 (객체를 제외한 모든것)
    ➕ console.dir() 👉🏻 () 내부를 콘솔에 출력 (객체)
    ➕ array.push() 👉🏻 ()내부를 array의 마지막요소로 추가
    ➕ parseInt() 👉🏻 ()내부를 Integer타입으로 변경
    ➕ isNaN() 👉🏻 ()내부가 NaN인지 아닌지 Boolean으로 리턴해줌
    ➕ typeof a 👉🏻 a의 데이터 타입을 리턴해줌
    ➕ HTMLTAG.addEventListener("click",function) 👉🏻 HTML 태그에 event를 등록
    ➕ HTMLTAG.style.color = "blue" 👉🏻 HTML 태그의 css를 변경
    ➕ event.preventDefault 👉🏻 브라우저의 기본 수행동작을 막음
    ➕ String.length 👉🏻 String의 길이를 Number로 리턴해줌
    ➕ `backtick ${backtick}` 👉🏻 백틱기호 + 백틱기호 내에서 변수 사용 방법
    ➕ localStorage.getItem(String) 👉🏻 localStorage의 property중에 String과 일치하는 property의 key를 리턴해줌
    ➕ localStorage.setItem(property,key) 👉🏻 localStorage에 property와 key를 등록해줌

➡ 자바스크립트로 HTML에 접근
    ➕  document.getElementById("title") 👉🏻 id가 title인 태그를 가져온다.
    ➕  document.getElementByClassName("title") 👉🏻 class가 body인 태그를 가져온다.
    ➕  document.getElementsByTagName("title") 👉🏻 title 태그를 배열 형태로 불러온다.
    ➕  document.querySelector(".title") 👉🏻 class가 title인 여러 태그들 중 첫번째를 불러온다.
    ➕  document.querySelectorAll(".title") 👉🏻 class가 title인 여러 태그들을 배열 형태로 불러온다.
    ➕  HTMLTAG.className 👉🏻 HTML tag의 className을 가져온다.
    ➕  HTMLTAG.innerText = "" 👉🏻 HTML tag의 내부 text를 변경한다.
    ➕  HTMLTAG.classList.contains(className) 👉🏻 HTML tag의 class에 className이 있는지 확인한다. (Boolean 반환)
    ➕  HTMLTAG.classList.add(className) 👉🏻 HTML tag의 class에 className을 더한다
    ➕  HTMLTAG.classList.remove(className) 👉🏻 HTML tag의 class에 className을 제거한다
    ➕  HTMLTAG.classList.toggle(className) 👉🏻 HTML tag의 class에 className이 없다면 추가 / 있다면 제거 한다
    ➕  HTMLTAG.value 👉🏻 HTML tag의 value를 가져온다. (주로 input태그에 쓰임)

➡ 여러가지 Evenet들
    ➕  click
    ➕  submit
    ➕  mousedown
    ➕  mousemove
    ➕  mouseout
    ➕  mouseover
    ➕  mouserup
    ➕  mousewheel
    ➕  play
    ➕  pause
    ➕  scroll
    ➕  selected
    ➕  mouseenter
    ➕  mouseleave
    ➕  copy ⏩ 복사 될때
    ➕  paste ⏩ 붙혀넣기 될때
    ➕  drag
    ➕  drop
    ➕  keydown
    ➕  keypress
    ➕  keyup
    ➕  load
    ➕  resize ⏩ 화면 크기조정이 될때
    ➕  online ⏩ 인터넷연결이 되었을때
    ➕  offline ⏩ 인터넷연결이 안되었을때

➡  영상속 꿀 Tip 🎈
    ➕  CSS의 모든변화에는 transtion을 이용하려 해보자!